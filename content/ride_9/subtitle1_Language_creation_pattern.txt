Describing everything in
full English sentences or full sentences in whatever
language you speak isn't always the easiest way to give the input
to the large language model. Now, if you think about
it in the real world, a lot of times we have our own specialized
languages to describe different domains. So a math may have its own specialized
language or we may have shorthand for taking notes or
describing different interesting things. We may create our own little languages
to able to capture information in a more concise way than if we
wrote it out in full sentences. Now, of course, the key to these
languages is that the person that we are communicating with in
the language knows the language too. They know the meaning of the different,
the statements that we're making in the different symbols or
words that we're using. Now as an example of this, we've been
doing a lot of work in partnership with the city of Nashville and
the emergency responders. And one of the things they do is
the operators who are taking calls. And you can imagine this is
a really stressful situation. They're trying to take notes down about
what's going on in an emergency and they actually have their
own shorthand notation. You can imagine the stress and
difficulty of receiving a call or around in an emergency and
trying to take down information that can then be used to take
the appropriate action. Send an ambulance or send a fire truck or
whatever needs to be done. And so they have their own
little shorthand notation. And if you go and just try to read this, you're not necessarily going to
be able to read it and understand it because it's designed for
people who use it day in and day out. To be able to communicate with each other,
but not necessarily to be as explicit and
obvious as possible. So I'm going to teach you
a pattern where we can basically teach a large language model. A new language and then communicate with the large language
model in that new language or shorthand. So this is called the meta
language creation pattern. So we're going to create a language, this
is going to be our meta language creation where we're going to go and
describe to the large language model. What our language is, what
are the meanings of different symbols or statements in that language? And then we're going to go and converse
with the large language model using it. So let's look at our example here, we're going to create a trip
planning application. Now, I haven't gotten into the metal
language creation pattern, but I'm giving you an example that uses it. So we're going to create this
trip planning application. I will describe my trip and you will list interesting things to do
in the places that I will pass through. I will tell you how many days
I will stay in each place and you will list possible itineraries. So far, we've just got a prompt
to help us do trip planning. Now, here's where we're going to go and
use the metal language creation pattern. I'm going to say to describe my route,
I'm going to use a shorthand notation. So we're queuing it in and we're going to
tell it about this shorthand notation. When I say and notice this Nashville comma three arrow Memphis comma two. I mean that my route will go
from Nashville to Memphis and that I will stay three days in
Nashville and two days in Memphis. Now, I want to kind of draw your
attention to something here. Notice that I'm starting off
by saying when I say this, here's an example of my new
language that I'm creating or my new shorthand that I'm creating. I mean this and so
you're taking an example and then you're showing it what you mean. So you're then saying, I mean that
my route will go from Nashville to Memphis and I will stay three days
in Nashville and two days in Memphis. So you're giving it
basically a translation. Now another way to think about it,
this is similar to few shot examples. You're saying here's an example of input,
here's the example of the output or here's the example of
a comment on a movie. Here's an example of the sentiment
analysis for that comment, you're kind of doing something similar
except what you're doing is you're saying when I say this in my language,
this is what I mean. And you're showing it the translation and
the meaning behind it. The other thing to note
is that my notation is much denser than the full
English that I'm going to use. So it's Nashville comma three
arrow Memphis comma two. And it's that short thing is
describing this much longer. Basically statement that says my route
will go from Nashville to Memphis and I will stay three days in Nashville and
two days in Memphis. I could write all this out, but
I want to have my notation. Now it goes ahead and trip plans for me
on Nashville and Memphis and I'm going to skip that and I'm going to go down to now
where I have an actual just statement. So notice we've now
programmed our new language, we've done the metal
language creation pattern. And now the large language
model understands our language. So we say Nashville comma zero and
Nashville comma zero means I'm leaving from Nashville,
I'm not going to stay there. I don't want you to trip plan for
me in Nashville, which is an interesting thing that
has to consider that in the logic. I'm going to Dallas, Dallas comma one and
then arrow Grandberry Texas comma four. And so basically, what I'm saying is
my trip is going to go from Nashville. I'm not going to stay there at all. Dallas, I'm going to stay there one day
and then I'm going to stay in Granbury, Texas for four days. And it says sure, since you mentioned that you won't
be spending any time in Nashville. I'll focus on providing you interesting
things to do and possible itineraries for your one day. Stay in Dash, Dallas and
your four day stay in Grandberry, Texas. So it then plans our
one day stay in Dallas. We have a one day stay in Dallas. It describes what we're
going to do on that day. It then describes for Granbury,
Texas over here, it says four days and then it describes what we're going to
do in Granbury for the four days. Now, if I wanted to experiment
with different itineraries and I wanted to really quickly have
a short end for saying, well, what if I did this itinerary? What would I do? What if I did this one? It's a lot more condensed. Now, also I have to admit I'm a computer
scientist and a programmer, right? So I like having things that look
like condensed programming language instructions. But you can imagine a lot of people
use shorthand notation, abbreviations. You can use them too
in the language model. You just have to explain it to
it unless it already knows it. If you're using something
that's well understood, you can just say I'm
going to use this language. Or I want you to interpret this in the
same way that you would interpret it in a math context and
you could explain what that means. So it plans our trip. Then here's where I go and try it again. Look, I'm getting a more
complex statement. I'm saying I'm going from Nashville to
Fair Hope Alabama where I'm going to stay three days to Gulf Shores Alabama. Where I'm going to stay
one day to Montrose, Alabama where I'm going to stay one day. So now I've got a much longer statement. And if I had to write that all
out in words, in full sentences, it would take a lot longer to
write it out in full sentences. But I've described the language and now this kind of crazy string
that I've put together. It knows to take that and
use it as the input for the trip planning. So now it says Fair Hope Alabama
three days and it gives me my planning for
my itinerary there. So it gives me my day 1 day 2 and day 3. It then says Gulf Shores Alabama one day
and then it provides my itinerary for that one day in Gulf Shores and
then it understands Montrose, Alabama. And gives me my one day
stay in Montrose and gives me examples of things to do. So you can imagine that this is
a really sort of helpful capability. You may want to go and start thinking
about how do I develop a shorthand notation for the tasks that I do really
frequently with the large language model. And where it would save
me a lot of time and effort if I could describe what
I want using some shorthand. And maybe we can also
describe it more precisely, maybe there's a way to
describe it more consistently. So if everybody uses the shorthand, the meaning is less ambiguous because
we've already defined it in advance. And there's less variability
in the explanation or how you express it in the shorthand. So maybe you're an organization and you want everybody to express certain
information the same way, to make sure that the reasoning from the underlying
large language model is consistent. And so now it's not always necessarily
going to be consistent, but at least you would get the data,
entered in a more consistent way. So you could define your own language for
your organization for describing certain types of information
and teach that to your people so that when they go in and
they enter in that information. You're going to have a consistent sort of
semantics to what that information means. Now, if everybody goes and just describes
it in English using whatever phrasing, whatever level of detail,
etc that they want. You may not get the outcomes
you want from your prompt. So by having your own language or
shorthand, you can help constrain
how you define things. How you express information to
the large language model and hopefully help it reason better.